{"version":3,"sources":["Actions.ts","Reducers.ts","State.tsx","views/FooterView.tsx","components/InkButton.tsx","mask.ts","components/CurrencyInput.tsx","views/PersonView.tsx","views/ItemsView.tsx","views/ResultView.tsx","views/TotalsView.tsx","index.tsx","App.tsx"],"names":["PersonActions","PeopleActions","TotalsActions","ResultActions","peopleReducer","state","action","type","ADD_PERSON","people","length","shares","personTotal","REMOVE_PERSON","slice","INCREMENT_SHARES","DECREMENT_SHARES","CHANGE_SHARE_VALUE","map","item","idx","payload","index","concat","shareIndex","value","newShares","reduce","acc","val","personReducer","totalsReducer","totals","SET_SUBTOTAL","subtotal","SET_GRAND_TOTAL","grandtotal","resultReducer","CALCULATE_RESULT","totalOfAllItems","splits","person","percentOfGrandTotal","personalTotal","amountOwed","Swal","text","confirmButtonColor","result","toFixed","split","results","reducer","DispatchContext","React","createContext","initialState","DispatchContextProvider","props","useReducer","dispatch","Provider","children","FooterView","style","fontSize","marginTop","href","InkButton","className","onClick","disabled","disableInk","undefined","mask","decimalSeparator","thousandSeparator","prefix","PRECISION","MAX_DIGITS","maskedValue","stringVal","String","digits","match","pop","unshift","splice","Number","join","raw","decimalpos","x","trim","CurrencyInput","id","name","onChangeEvent","useState","setState","key","onChange","event","preventDefault","currentTarget","PersonView","useContext","isMobile","navigator","userAgent","contentEditable","Intl","NumberFormat","currency","format","cx","shareValue","shareIdx","handleChangeEvent","e","ItemsView","total","share","USD","ResultView","borderBottom","fontWeight","TotalsView","htmlFor","REACT_ROOT","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.52a9d1e3.chunk.js","sourcesContent":["export enum PersonActions {\n  INCREMENT_SHARES = \"share.inc\",\n  DECREMENT_SHARES = \"share.dec\",\n  CHANGE_SHARE_VALUE = \"share.change\"\n}\n\nexport enum PeopleActions {\n  ADD_PERSON = \"person.add\",\n  REMOVE_PERSON = \"person.remove\"\n}\n\nexport enum TotalsActions {\n  SET_SUBTOTAL = \"subtotal.set\",\n  SET_GRAND_TOTAL = \"grandtotal.set\"\n}\n\nexport enum ResultActions {\n  CALCULATE_RESULT = \"result.calc\"\n}\n\nexport type Action = {\n  type: PeopleActions | TotalsActions | PersonActions | ResultActions;\n  payload?: {\n    index?: number;\n    shareIndex?: number;\n    value?: number;\n  };\n};\n","import {\n  Action,\n  PeopleActions,\n  PersonActions,\n  ResultActions,\n  TotalsActions\n} from \"./Actions\";\nimport { AppState, PeopleState, ResultState, TotalsState } from \"./State\";\n\nimport Swal from \"sweetalert2\";\n\nfunction peopleReducer(state: AppState, action: Action): PeopleState {\n  switch (action.type) {\n    case PeopleActions.ADD_PERSON: {\n      if (state.people.length === 30) {\n        return state.people;\n      }\n      return [...state.people, { shares: [0], personTotal: 0 }];\n    }\n    case PeopleActions.REMOVE_PERSON: {\n      if (state.people.length === 2) {\n        return state.people;\n      }\n      return state.people.slice(0, -1);\n    }\n    case PersonActions.INCREMENT_SHARES:\n    case PersonActions.DECREMENT_SHARES:\n    case PersonActions.CHANGE_SHARE_VALUE:\n      return personReducer(state.people, action);\n    default:\n      return state.people;\n  }\n}\n\nfunction personReducer(state: PeopleState, action: Action): PeopleState {\n  switch (action.type) {\n    case PersonActions.INCREMENT_SHARES: {\n      return state.map((item, idx) => {\n        if (\n          action.payload != null &&\n          action.payload.index != null &&\n          idx === action.payload.index\n        ) {\n          return { ...item, shares: item.shares.concat([0]) };\n        }\n        return item;\n      });\n    }\n    case PersonActions.DECREMENT_SHARES: {\n      return state.map((item, idx) => {\n        if (\n          action.payload != null &&\n          action.payload.index != null &&\n          idx === action.payload.index\n        ) {\n          return { ...item, shares: item.shares.slice(0, -1) };\n        }\n        return item;\n      });\n    }\n    case PersonActions.CHANGE_SHARE_VALUE: {\n      return state.map((item, idx) => {\n        if (\n          action.payload != null &&\n          action.payload.shareIndex != null &&\n          action.payload.value != null &&\n          idx === action.payload.index\n        ) {\n          const newShares = item.shares;\n          newShares[action.payload.shareIndex] = action.payload.value;\n          return {\n            ...item,\n            shares: newShares,\n            personTotal: newShares.reduce((acc, val) => acc + val)\n          };\n        }\n        return item;\n      });\n    }\n    default:\n      return state;\n  }\n}\n\nfunction totalsReducer(state: AppState, action: Action): TotalsState {\n  if (action.payload == null) {\n    return state.totals;\n  }\n  switch (action.type) {\n    case TotalsActions.SET_SUBTOTAL: {\n      return { ...state.totals, subtotal: action.payload.value || 0 };\n    }\n    case TotalsActions.SET_GRAND_TOTAL: {\n      return { ...state.totals, grandtotal: action.payload.value || 0 };\n    }\n    default: {\n      return state.totals;\n    }\n  }\n}\n\nfunction resultReducer(state: AppState, action: Action): ResultState | null {\n  switch (action.type) {\n    case ResultActions.CALCULATE_RESULT: {\n      let totalOfAllItems = 0;\n      const splits = state.people.map((person, idx) => {\n        const percentOfGrandTotal = person.personTotal / state.totals.subtotal;\n        totalOfAllItems += person.personTotal;\n        return {\n          personalTotal: person.personTotal,\n          percentOfGrandTotal,\n          amountOwed: percentOfGrandTotal * state.totals.grandtotal\n        };\n      });\n\n      if (state.totals.subtotal === 0) {\n        Swal({\n          text: \"Enter a Subtotal!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      if (state.totals.grandtotal === 0) {\n        Swal({\n          text: \"Enter a Grand Total!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      if (totalOfAllItems.toFixed(2) != state.totals.subtotal.toFixed(2)) {\n        debugger;\n        Swal({\n          text: \"Items don't add up to subtotal!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      if (\n        splits.reduce((acc, split) => acc + split.amountOwed, 0).toFixed(2) !=\n        state.totals.grandtotal.toFixed(2)\n      ) {\n        Swal({\n          text: \"Grand Total incorrect!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      return {\n        grandtotal: state.totals.grandtotal,\n        subtotal: state.totals.subtotal,\n        results: splits\n      };\n    }\n    default: {\n      return state.result;\n    }\n  }\n}\n\nexport default function reducer(state: AppState, action: Action): AppState {\n  return {\n    people: peopleReducer(state, action),\n    totals: totalsReducer(state, action),\n    result: resultReducer(state, action)\n  };\n}\n","import React, { createContext, useReducer } from \"react\";\n\nimport { Action } from \"./Actions\";\nimport reducer from \"./Reducers\";\n\nexport type Person = {\n  shares: Array<number>;\n  personTotal: number;\n};\n\nexport type PeopleState = Array<Person>;\n\nexport type TotalsState = {\n  subtotal: number;\n  grandtotal: number;\n};\n\nexport type SplitResult = {\n  amountOwed: number;\n  percentOfGrandTotal: number;\n  personalTotal: number;\n};\n\nexport type ResultState = {\n  results: SplitResult[];\n  subtotal: number;\n  grandtotal: number;\n};\n\nexport type AppState = {\n  people: PeopleState;\n  totals: TotalsState;\n  result: null | ResultState;\n};\n\nexport const DispatchContext = React.createContext((action: Action) => {});\n\nexport const initialState: AppState = {\n  people: [\n    {\n      shares: [0],\n      personTotal: 0\n    },\n    {\n      shares: [0],\n      personTotal: 0\n    }\n  ],\n  totals: {\n    subtotal: 0,\n    grandtotal: 0\n  },\n  result: null\n};\n\nexport function DispatchContextProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      {props.children(state)}\n    </DispatchContext.Provider>\n  );\n}\n","import React from \"react\";\n\nexport default function FooterView() {\n  return (\n    <div style={{ fontSize: \"12px\", marginTop: \"48px\" }}>\n      <hr />\n      Made with &lt;3 by <a href=\"https://www.victorszeto.com\">Victor Szeto</a>\n    </div>\n  );\n}\n","import React, { ReactNode, ReactNodeArray } from \"react\";\n\nimport Ink from \"react-ink\";\n\ninterface IInkButtonProps {\n  children?: ReactNode | ReactNodeArray;\n  disabled?: boolean;\n  disableInk?: boolean;\n  onClick?: (any) => void;\n  className?: string;\n  type?: string;\n}\n\nexport default function InkButton({\n  children,\n  className,\n  onClick,\n  type,\n  disabled,\n  disableInk\n}: IInkButtonProps) {\n  return (\n    <button\n      onClick={onClick != null ? onClick : undefined}\n      className={className != null ? className : undefined}\n      disabled={disabled != null ? disabled : undefined}\n      type={type != null ? type : undefined}\n    >\n      {children}\n      {!disableInk && <Ink />}\n    </button>\n  );\n}\n","export default function mask(\n  value: number,\n  decimalSeparator: string = \".\",\n  thousandSeparator: string = \",\",\n  prefix: string = \"$\"\n): { value: number; maskedValue: string } {\n  const PRECISION = 2;\n  const MAX_DIGITS = 6 + 2;\n\n  if (value == null) {\n    return { value: 0, maskedValue: `${prefix}0.00` };\n  }\n\n  // if the given value is a Number, let's convert into String to manipulate that\n  const stringVal = String(value);\n\n  if (stringVal.length === 0) {\n    return { value: 0, maskedValue: `${prefix}0.00` };\n  }\n\n  // extract digits. if no digits, fill in a zero.\n  let digits = stringVal.match(/\\d/g) || [\"0\"];\n\n  if (stringVal.length > MAX_DIGITS) {\n    digits.pop();\n  }\n\n  // zero-pad a input\n  while (digits.length <= PRECISION) {\n    digits.unshift(\"0\");\n  }\n\n  // add the decimal separator\n  digits.splice(digits.length - PRECISION, 0, \".\");\n\n  // clean up extraneous digits like leading zeros.\n  digits = Number(digits.join(\"\"))\n    .toFixed(PRECISION)\n    .split(\"\");\n  let raw = Number(digits.join(\"\"));\n\n  // -1 needed to position the decimal separator before the digits.\n  let decimalpos = digits.length - PRECISION - 1;\n\n  // set the final decimal separator\n  digits[decimalpos] = decimalSeparator;\n\n  // add in any thousand separators\n  for (let x = decimalpos - 3; x > 0; x = x - 3) {\n    digits.splice(x, 0, thousandSeparator);\n  }\n\n  // if we have a prefix or suffix, add them in.\n  if (prefix.length > 0) {\n    digits.unshift(prefix);\n  }\n\n  return { value: raw, maskedValue: digits.join(\"\").trim() };\n}\n","import React, { useState } from \"react\";\n\nimport mask from \"../mask\";\n\ninterface ICurrencyInputProps {\n  onChangeEvent: (number) => void;\n  value: number;\n  name?: string;\n  id?: string;\n}\n\ntype CurrencyInputState = {\n  value: number;\n  maskedValue: string;\n};\n\nexport default function CurrencyInput(props: ICurrencyInputProps) {\n  const { id, name, onChangeEvent, value } = props;\n  const [state, setState] = useState<CurrencyInputState>(mask(value));\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { maskedValue, value } = mask(event.currentTarget.value);\n    setState({ maskedValue, value });\n    onChangeEvent(value);\n  };\n\n  return (\n    <div className=\"col\">\n      <input\n        key={name}\n        className=\"col\"\n        onChange={handleChange}\n        prefix={\"$\"}\n        value={state.maskedValue}\n        name={name ? name : undefined}\n        id={id ? id : undefined}\n      />\n    </div>\n  );\n}\n","import { DispatchContext, Person } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport CurrencyInput from \"../components/CurrencyInput\";\nimport InkButton from \"../components/InkButton\";\nimport { PersonActions } from \"../Actions\";\nimport { default as cx } from \"classnames\";\n\ninterface IPersonViewProps {\n  idx: number;\n  person: Person;\n}\n\nexport default function PersonView(props: IPersonViewProps) {\n  const { idx, person } = props;\n  const dispatch = useContext(DispatchContext);\n\n  const isMobile = navigator.userAgent.match(\"Mobi\");\n\n  const handleChangeEvent = (shareIndex, value) => {\n    dispatch({\n      type: PersonActions.CHANGE_SHARE_VALUE,\n      payload: { index: idx, shareIndex, value }\n    });\n  };\n\n  return (\n    <>\n      <span contentEditable>Person {idx + 1}</span>\n      {person.shares.length > 1 && (\n        <span style={{ fontSize: \"12px\" }}>\n          {`· Total: ${new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\"\n          }).format(person.personTotal)}`}\n        </span>\n      )}\n      <div className={cx(\"row\")}>\n        {person.shares.map((shareValue, shareIdx) => {\n          return (\n            <CurrencyInput\n              key={shareIdx}\n              onChangeEvent={value => handleChangeEvent(shareIdx, value)}\n              value={shareValue}\n              name={shareIdx === 0 ? `person-${idx}` : undefined}\n              id={shareIdx === 0 ? `person-${idx}` : undefined}\n            />\n          );\n        })}\n        {person.shares.length > 1 && (\n          <InkButton\n            className=\"col-1\"\n            onClick={e => {\n              e.preventDefault();\n              dispatch({\n                type: PersonActions.DECREMENT_SHARES,\n                payload: { index: props.idx }\n              });\n            }}\n          >\n            {isMobile ? \"Remove Item\" : \"-\"}\n          </InkButton>\n        )}\n        {person.shares.length <= 8 && (\n          <InkButton\n            className=\"col-1\"\n            onClick={e => {\n              e.preventDefault();\n              dispatch({\n                type: PersonActions.INCREMENT_SHARES,\n                payload: { index: props.idx }\n              });\n            }}\n          >\n            {isMobile ? \"Add Item\" : \"+\"}\n          </InkButton>\n        )}\n      </div>\n    </>\n  );\n}\n","import { DispatchContext, PeopleState } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport InkButton from \"../components/InkButton\";\nimport { PeopleActions } from \"../Actions\";\nimport PersonView from \"./PersonView\";\nimport { default as cx } from \"classnames\";\n\ninterface IPeopleViewProps {\n  people: PeopleState;\n}\n\nexport default function ItemsView(props: IPeopleViewProps) {\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <>\n      <h4>Items</h4>\n      <div>\n        {props.people.map((person, idx) => (\n          <PersonView person={person} idx={idx} key={idx} />\n        ))}\n      </div>\n      <div>\n        <strong>Running Total:</strong> $\n        {props.people.reduce(\n          (total, person) =>\n            total +\n            person.shares.reduce(\n              (personalTotal, share) => personalTotal + share,\n              0\n            ),\n          0\n        )}\n      </div>\n      <div className={cx(\"row\")} style={{ marginTop: \"32px\" }}>\n        {props.people.length < 30 && (\n          <InkButton\n            onClick={event => {\n              event.preventDefault();\n              dispatch({ type: PeopleActions.ADD_PERSON });\n            }}\n            className={cx(\"center\", \"col\", \"background-green\")}\n          >\n            Add Person\n          </InkButton>\n        )}\n        {props.people.length > 2 && (\n          <InkButton\n            onClick={event => {\n              event.preventDefault();\n              dispatch({ type: PeopleActions.REMOVE_PERSON });\n            }}\n            className={cx(\"center\", \"col\", \"background-red\")}\n            disabled={props.people.length === 2}\n          >\n            Remove Person\n          </InkButton>\n        )}\n      </div>\n    </>\n  );\n}\n","import { DispatchContext, ResultState } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport InkButton from \"../components/InkButton\";\nimport { ResultActions } from \"../Actions\";\nimport { default as cx } from \"classnames\";\n\ninterface IResultViewProps {\n  result: ResultState | null;\n}\n\nconst USD = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\nexport default function ResultView(props: IResultViewProps) {\n  const dispatch = useContext(DispatchContext);\n  const result = props.result;\n  return (\n    <>\n      <InkButton\n        className={cx(\"background-blue\")}\n        onClick={() =>\n          dispatch({\n            type: ResultActions.CALCULATE_RESULT\n          })\n        }\n        type=\"submit\"\n      >\n        Calculate\n      </InkButton>\n      {result && (\n        <>\n          <hr />\n          <h4>Results</h4>\n          <div className=\"row\" style={{ borderBottom: \"1px solid #111\" }}>\n            <div className=\"col\">\n              <h6>Person</h6>\n            </div>\n            <div className=\"col\">\n              <h6>Amount Owed</h6>\n            </div>\n            <div className=\"col\">\n              <h6>Breakdown</h6>\n            </div>\n          </div>\n          {result.results.map(\n            ({ personalTotal, percentOfGrandTotal, amountOwed }, idx) => (\n              <div className=\"row\" key={idx}>\n                <div className=\"col\">Person {idx + 1}</div>\n                <div className=\"col\" style={{ fontWeight: \"bold\" }}>\n                  {USD.format(amountOwed)}\n                </div>\n                <div className=\"col\">\n                  {USD.format(personalTotal)}\n                  <span style={{ fontSize: \"12px\" }}> (Items)</span>\n                  {\" + \"}\n                  {USD.format(\n                    percentOfGrandTotal * (result.grandtotal - result.subtotal)\n                  )}\n                  <span style={{ fontSize: \"12px\" }}> (Tax & Tip)</span>\n                </div>\n              </div>\n            )\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { DispatchContext, TotalsState } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport CurrencyInput from \"../components/CurrencyInput\";\nimport { TotalsActions } from \"../Actions\";\nimport { default as cx } from \"classnames\";\n\nexport default function TotalsView(props: { totals: TotalsState }) {\n  const dispatch = useContext(DispatchContext);\n  const { grandtotal, subtotal } = props.totals;\n\n  return (\n    <>\n      <h4 className={cx(\"row\")}>Totals</h4>\n      <div className={cx(\"row\")}>\n        <div className={cx(\"col\")}>\n          <label htmlFor=\"subtotal\">Subtotal</label>\n          <span style={{ fontSize: \"12px\" }}>\n            {\"· \"}Sum of the prices of all items\n          </span>\n          <CurrencyInput\n            onChangeEvent={value => {\n              dispatch({\n                type: TotalsActions.SET_SUBTOTAL,\n                payload: { value }\n              });\n            }}\n            value={subtotal}\n            name=\"subtotal\"\n            id=\"subtotal\"\n          />\n        </div>\n      </div>\n      <div className={cx(\"row\")}>\n        <div className={cx(\"col\")}>\n          <label htmlFor=\"grandTotal\">Grand Total</label>\n          <span style={{ fontSize: \"12px\" }}>\n            {\"· \"}Entire amount paid, including tax and tip\n          </span>\n          <CurrencyInput\n            onChangeEvent={value => {\n              dispatch({\n                type: TotalsActions.SET_GRAND_TOTAL,\n                payload: { value }\n              });\n            }}\n            value={grandtotal}\n            name=\"grandTotal\"\n            id=\"grandTotal\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst REACT_ROOT = document.getElementById(\"root\");\n\nReactDOM.render(<App />, REACT_ROOT);\n\nif (module[\"hot\"]) {\n  module[\"hot\"].accept(\"./App\", () => {\n    const NextApp: typeof App = require(\"./App\").default;\n    ReactDOM.render(<NextApp />, REACT_ROOT);\n  });\n}\n","import \"./App.css\";\n\nimport { AppState, DispatchContextProvider } from \"./State\";\n\nimport FooterView from \"./views/FooterView\";\nimport ItemsView from \"./views/ItemsView\";\nimport React from \"react\";\nimport ResultView from \"./views/ResultView\";\nimport TotalsView from \"./views/TotalsView\";\n\nexport default function App() {\n  return (\n    <DispatchContextProvider>\n      {(state: AppState) => (\n        <div className=\"container center\">\n          <h1>billsplit</h1>\n          <ItemsView people={state.people} />\n          <hr />\n          <TotalsView totals={state.totals} />\n          <ResultView result={state.result} />\n          <FooterView />\n        </div>\n      )}\n    </DispatchContextProvider>\n  );\n}\n"],"sourceRoot":""}