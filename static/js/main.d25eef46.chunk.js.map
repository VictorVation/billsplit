{"version":3,"sources":["Actions.ts","Reducers.ts","State.tsx","views/FooterView.tsx","components/InkButton.tsx","mask.ts","components/CurrencyInput.tsx","views/PersonView.tsx","views/PeopleView.tsx","views/ResultView.tsx","views/TotalsView.tsx","index.tsx","App.tsx"],"names":["PersonActions","PeopleActions","TotalsActions","ResultActions","peopleReducer","state","action","type","ADD_PERSON","people","length","Object","toConsumableArray","concat","shares","personTotal","REMOVE_PERSON","slice","INCREMENT_SHARES","DECREMENT_SHARES","CHANGE_SHARE_VALUE","map","item","idx","payload","index","objectSpread","shareIndex","value","newShares","reduce","acc","val","personReducer","reducer","totals","SET_SUBTOTAL","subtotal","SET_GRAND_TOTAL","grandtotal","totalsReducer","result","CALCULATE_RESULT","splits","person","Swal","text","confirmButtonColor","toFixed","tip","resultReducer","DispatchContext","React","createContext","initialState","DispatchContextProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","children","FooterView","style","fontSize","marginTop","href","InkButton","_ref","className","onClick","disabled","disableInk","undefined","ink_default","mask","decimalSeparator","arguments","thousandSeparator","prefix","maskedValue","stringVal","String","digits","match","pop","unshift","splice","Number","join","split","raw","decimalpos","x","trim","CurrencyInput","id","name","onChangeEvent","_useState","useState","_useState2","setState","key","onChange","event","preventDefault","_mask","currentTarget","PersonView","useContext","isMobile","navigator","userAgent","Fragment","htmlFor","Intl","NumberFormat","currency","format","cx","shareValue","shareIdx","handleChangeEvent","e","PeopleView","ResultView","TotalsView","_props$totals","REACT_ROOT","document","getElementById","ReactDOM","render"],"mappings":"0JAAYA,EAMAC,EAKAC,EAKAC,iDAhBAH,0HAMAC,kFAKAC,yFAKAC,oECLZ,SAASC,EAAcC,EAAiBC,GACtC,OAAQA,EAAOC,MACb,KAAKN,EAAcO,WACjB,OAA4B,KAAxBH,EAAMI,OAAOC,OACRL,EAAMI,OAERE,OAAAC,EAAA,EAAAD,CAAIN,EAAMI,QAAjBI,OAAA,CAAyB,CAAEC,OAAQ,CAAC,GAAIC,YAAa,KAEvD,KAAKd,EAAce,cACjB,OAA4B,IAAxBX,EAAMI,OAAOC,OACRL,EAAMI,OAERJ,EAAMI,OAAOQ,MAAM,GAAI,GAEhC,KAAKjB,EAAckB,iBACnB,KAAKlB,EAAcmB,iBACnB,KAAKnB,EAAcoB,mBACjB,OAMN,SAAuBf,EAAoBC,GACzC,OAAQA,EAAOC,MACb,KAAKP,EAAckB,iBACjB,OAAOb,EAAMgB,IAAI,SAACC,EAAMC,GACtB,OACoB,MAAlBjB,EAAOkB,SACiB,MAAxBlB,EAAOkB,QAAQC,OACfF,IAAQjB,EAAOkB,QAAQC,MAEhBd,OAAAe,EAAA,EAAAf,CAAA,GAAKW,EAAZ,CAAkBR,OAAQQ,EAAKR,OAAOD,OAAO,CAAC,MAEzCS,IAGX,KAAKtB,EAAcmB,iBACjB,OAAOd,EAAMgB,IAAI,SAACC,EAAMC,GACtB,OACoB,MAAlBjB,EAAOkB,SACiB,MAAxBlB,EAAOkB,QAAQC,OACfF,IAAQjB,EAAOkB,QAAQC,MAEhBd,OAAAe,EAAA,EAAAf,CAAA,GAAKW,EAAZ,CAAkBR,OAAQQ,EAAKR,OAAOG,MAAM,GAAI,KAE3CK,IAGX,KAAKtB,EAAcoB,mBACjB,OAAOf,EAAMgB,IAAI,SAACC,EAAMC,GACtB,GACoB,MAAlBjB,EAAOkB,SACsB,MAA7BlB,EAAOkB,QAAQG,YACS,MAAxBrB,EAAOkB,QAAQI,OACfL,IAAQjB,EAAOkB,QAAQC,MACvB,CACA,IAAMI,EAAYP,EAAKR,OAEvB,OADAe,EAAUvB,EAAOkB,QAAQG,YAAcrB,EAAOkB,QAAQI,MAC/CjB,OAAAe,EAAA,EAAAf,CAAA,GACFW,EADL,CAEER,OAAQe,EACRd,YAAac,EAAUC,OAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,MAGtD,OAAOV,IAGX,QACE,OAAOjB,GApDA4B,CAAc5B,EAAMI,OAAQH,GACrC,QACE,OAAOD,EAAMI,QA6HJ,SAASyB,EAAQ7B,EAAiBC,GAC/C,MAAO,CACLG,OAAQL,EAAcC,EAAOC,GAC7B6B,OA1EJ,SAAuB9B,EAAiBC,GACtC,GAAsB,MAAlBA,EAAOkB,QACT,OAAOnB,EAAM8B,OAEf,OAAQ7B,EAAOC,MACb,KAAKL,EAAckC,aACjB,OAAOzB,OAAAe,EAAA,EAAAf,CAAA,GAAKN,EAAM8B,OAAlB,CAA0BE,SAAU/B,EAAOkB,QAAQI,OAAS,IAE9D,KAAK1B,EAAcoC,gBACjB,OAAO3B,OAAAe,EAAA,EAAAf,CAAA,GAAKN,EAAM8B,OAAlB,CAA0BI,WAAYjC,EAAOkB,QAAQI,OAAS,IAEhE,QACE,OAAOvB,EAAM8B,QA8DPK,CAAcnC,EAAOC,GAC7BmC,OA1DJ,SAAuBpC,EAAiBC,GACtC,OAAQA,EAAOC,MACb,KAAKJ,EAAcuC,iBACjB,IAAI3B,EAAc,EACZ4B,EAAStC,EAAMI,OAAOY,IAAI,SAACuB,EAAQrB,GAEvC,OADAR,GAAe6B,EAAO7B,YAEnB6B,EAAO7B,YAAcV,EAAM8B,OAAOE,SAAYhC,EAAM8B,OAAOI,aAIhE,OAA8B,IAA1BlC,EAAM8B,OAAOE,UACfQ,IAAK,CACHC,KAAM,oBACNC,mBAAoB,YAEf1C,EAAMoC,QAEiB,IAA5BpC,EAAM8B,OAAOI,YACfM,IAAK,CACHC,KAAM,uBACNC,mBAAoB,YAEf1C,EAAMoC,QAEX1B,EAAYiC,QAAQ,IAAM3C,EAAM8B,OAAOE,SAASW,QAAQ,IAE1DH,IAAK,CACHC,KAAM,kCACNC,mBAAoB,YAEf1C,EAAMoC,QAGbE,EAAOb,OAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAKgB,QAAQ,IAC/C3C,EAAM8B,OAAOI,WAAWS,QAAQ,IAEhCH,IAAK,CACHC,KAAM,yBACNC,mBAAoB,YAEf1C,EAAMoC,QAER,CACLE,SACAM,IAAK5C,EAAM8B,OAAOI,WAAalC,EAAM8B,OAAOE,SAAW,GAG3D,QACE,OAAOhC,EAAMoC,QASPS,CAAc7C,EAAOC,ICnI1B,IAAM6C,EAAkBC,IAAMC,cAAc,SAAC/C,MAEvCgD,EAAyB,CACpC7C,OAAQ,CACN,CACEK,OAAQ,CAAC,GACTC,YAAa,GAEf,CACED,OAAQ,CAAC,GACTC,YAAa,IAGjBoB,OAAQ,CACNE,SAAU,EACVE,WAAY,GAEdE,OAAQ,MAGH,SAASc,EAAwBC,GAAO,IAAAC,EACnBC,qBAAWxB,EAASoB,GADDK,EAAAhD,OAAAiD,EAAA,EAAAjD,CAAA8C,EAAA,GACtCpD,EADsCsD,EAAA,GAC/BE,EAD+BF,EAAA,GAE7C,OACEG,EAAAC,EAAAC,cAACb,EAAgBc,SAAjB,CAA0BrC,MAAOiC,GAC9BL,EAAMU,SAAS7D,IClDP,SAAS8D,IACtB,OACEL,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEC,SAAU,OAAQC,UAAW,SACzCR,EAAAC,EAAAC,cAAA,WADF,mBAEqBF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,+BAAR,qCCOV,SAASC,EAATC,GAOK,IANlBP,EAMkBO,EANlBP,SACAQ,EAKkBD,EALlBC,UACAC,EAIkBF,EAJlBE,QACApE,EAGkBkE,EAHlBlE,KACAqE,EAEkBH,EAFlBG,SACAC,EACkBJ,EADlBI,WAEA,OACEf,EAAAC,EAAAC,cAAA,UACEW,QAAoB,MAAXA,EAAkBA,OAAUG,EACrCJ,UAAwB,MAAbA,EAAoBA,OAAYI,EAC3CF,SAAsB,MAAZA,EAAmBA,OAAWE,EACxCvE,KAAc,MAARA,EAAeA,OAAOuE,GAE3BZ,GACCW,GAAcf,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,OC7BP,SAASiB,EACtBpD,GAIwC,IAHxCqD,EAGwCC,UAAAxE,OAAA,QAAAoE,IAAAI,UAAA,GAAAA,UAAA,GAHb,IAC3BC,EAEwCD,UAAAxE,OAAA,QAAAoE,IAAAI,UAAA,GAAAA,UAAA,GAFZ,IAC5BE,EACwCF,UAAAxE,OAAA,QAAAoE,IAAAI,UAAA,GAAAA,UAAA,GADvB,IAKjB,GAAa,MAATtD,EACF,MAAO,CAAEA,MAAO,EAAGyD,YAAW,GAAAxE,OAAKuE,EAAL,SAIhC,IAAME,EAAYC,OAAO3D,GAEzB,GAAyB,IAArB0D,EAAU5E,OACZ,MAAO,CAAEkB,MAAO,EAAGyD,YAAW,GAAAxE,OAAKuE,EAAL,SAIhC,IAAII,EAASF,EAAUG,MAAM,QAAU,CAAC,KAOxC,IALIH,EAAU5E,OAhBK,GAiBjB8E,EAAOE,MAIFF,EAAO9E,QAtBI,GAuBhB8E,EAAOG,QAAQ,KAIjBH,EAAOI,OAAOJ,EAAO9E,OA3BH,EA2BuB,EAAG,KAG5C8E,EAASK,OAAOL,EAAOM,KAAK,KACzB9C,QA/Be,GAgCf+C,MAAM,IACT,IAAIC,EAAMH,OAAOL,EAAOM,KAAK,KAGzBG,EAAaT,EAAO9E,OApCN,EAoC2B,EAG7C8E,EAAOS,GAAchB,EAGrB,IAAK,IAAIiB,EAAID,EAAa,EAAGC,EAAI,EAAGA,GAAQ,EAC1CV,EAAOI,OAAOM,EAAG,EAAGf,GAQtB,OAJIC,EAAO1E,OAAS,GAClB8E,EAAOG,QAAQP,GAGV,CAAExD,MAAOoE,EAAKX,YAAaG,EAAOM,KAAK,IAAIK,QCzCrC,SAASC,EAAc5C,GAA4B,IACxD6C,EAAmC7C,EAAnC6C,GAAIC,EAA+B9C,EAA/B8C,KAAMC,EAAyB/C,EAAzB+C,cAAe3E,EAAU4B,EAAV5B,MAD+B4E,EAEtCC,mBAA6BzB,EAAKpD,IAFI8E,EAAA/F,OAAAiD,EAAA,EAAAjD,CAAA6F,EAAA,GAEzDnG,EAFyDqG,EAAA,GAElDC,EAFkDD,EAAA,GAWhE,OACE5C,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OACbZ,EAAAC,EAAAC,cAAA,SAEE4C,IAAKN,EACL5B,UAAU,MAGVmC,SAfe,SAAAC,GACnBA,EAAMC,iBADsB,IAAAC,EAEChC,EAAK8B,EAAMG,cAAcrF,OAAhDyD,EAFsB2B,EAEtB3B,YAAazD,EAFSoF,EAETpF,MACnB+E,EAAS,CAAEtB,cAAazD,UACxB2E,EAAc3E,IAYVwD,OAAQ,IACRxD,MAAOvB,EAAMgF,YACbiB,KAAMA,QAAcxB,EACpBuB,GAAIA,QAAUvB,yBC1BP,SAASoC,EAAW1D,GAAyB,IAClDjC,EAAgBiC,EAAhBjC,IAAKqB,EAAWY,EAAXZ,OACPiB,EAAWsD,qBAAWhE,GAEtBiE,EAAWC,UAAUC,UAAU7B,MAAM,QAS3C,OACE3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwD,SAAA,KACEzD,EAAAC,EAAAC,cAAA,SAAOwD,QAAO,UAAA3G,OAAYU,IAA1B,UAAyCA,EAAM,GAC9CqB,EAAO9B,OAAOJ,OAAS,GACtBoD,EAAAC,EAAAC,cAAA,QAAMI,MAAO,CAAEC,SAAU,SAAzB,eAAAxD,OACe,IAAI4G,KAAKC,aAAa,QAAS,CAC1CtD,MAAO,WACPuD,SAAU,QACTC,OAAOhF,EAAO7B,eAGrB+C,EAAAC,EAAAC,cAAA,OAAKU,UAAWmD,IAAG,QAChBjF,EAAO9B,OAAOO,IAAI,SAACyG,EAAYC,GAC9B,OACEjE,EAAAC,EAAAC,cAACoC,EAAD,CACEQ,IAAKmB,EACLxB,cAAe,SAAA3E,GAAK,OAvBN,SAACD,EAAYC,GACrCiC,EAAS,CACPtD,KAAMP,EAAcoB,mBACpBI,QAAS,CAAEC,MAAOF,EAAKI,aAAYC,WAoBHoG,CAAkBD,EAAUnG,IACpDA,MAAOkG,EACPxB,KAAmB,IAAbyB,EAAA,UAAAlH,OAA2BU,QAAQuD,EACzCuB,GAAiB,IAAb0B,EAAA,UAAAlH,OAA2BU,QAAQuD,MAI5ClC,EAAO9B,OAAOJ,OAAS,GACtBoD,EAAAC,EAAAC,cAACQ,EAAD,CACEE,UAAU,QACVC,QAAS,SAAAsD,GACPA,EAAElB,iBACFlD,EAAS,CACPtD,KAAMP,EAAcmB,iBACpBK,QAAS,CAAEC,MAAO+B,EAAMjC,SAI3B6F,EAAW,cAAgB,KAG/BxE,EAAO9B,OAAOJ,QAAU,GACvBoD,EAAAC,EAAAC,cAACQ,EAAD,CACEE,UAAU,QACVC,QAAS,SAAAsD,GACPA,EAAElB,iBACFlD,EAAS,CACPtD,KAAMP,EAAckB,iBACpBM,QAAS,CAAEC,MAAO+B,EAAMjC,SAI3B6F,EAAW,WAAa,OC9DtB,SAASc,EAAW1E,GACjC,IAAMK,EAAWsD,qBAAWhE,GAE5B,OACEW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwD,SAAA,KACEzD,EAAAC,EAAAC,cAAA,WACGR,EAAM/C,OAAOY,IAAI,SAACuB,EAAQrB,GAAT,OAChBuC,EAAAC,EAAAC,cAACkD,EAAD,CAAYtE,OAAQA,EAAQrB,IAAKA,EAAKqF,IAAKrF,OAG/CuC,EAAAC,EAAAC,cAAA,OAAKU,UAAWmD,IAAG,OAAQzD,MAAO,CAAEE,UAAW,SAC5Cd,EAAM/C,OAAOC,OAAS,IACrBoD,EAAAC,EAAAC,cAACQ,EAAD,CACEG,QAAS,SAAAmC,GACPA,EAAMC,iBACNlD,EAAS,CAAEtD,KAAMN,EAAcO,cAEjCkE,UAAWmD,IAAG,SAAU,MAAO,qBALjC,cAUDrE,EAAM/C,OAAOC,OAAS,GACrBoD,EAAAC,EAAAC,cAACQ,EAAD,CACEG,QAAS,SAAAmC,GACPA,EAAMC,iBACNlD,EAAS,CAAEtD,KAAMN,EAAce,iBAEjC0D,UAAWmD,IAAG,SAAU,MAAO,kBAC/BjD,SAAkC,IAAxBpB,EAAM/C,OAAOC,QANzB,mBCxBK,SAASyH,EAAW3E,GACjC,IAAMK,EAAWsD,qBAAWhE,GAE5B,OACEW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwD,SAAA,KACEzD,EAAAC,EAAAC,cAACQ,EAAD,CACEE,UAAWmD,IAAG,mBACdlD,QAAS,kBACPd,EAAS,CACPtD,KAAMJ,EAAcuC,oBAGxBnC,KAAK,UAPP,aAWCiD,EAAMf,QACLqB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwD,SAAA,KACEzD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qBAECR,EAAMf,OAAOE,OAAOtB,IAAI,SAAC0E,EAAOxE,GAAR,OACvBuC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,MAAMkC,IAAKrF,GACxBuC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OAAf,UAA6BnD,EAAM,GACnCuC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OACZ,IAAI+C,KAAKC,aAAa,QAAS,CAC9BtD,MAAO,WACPuD,SAAU,QACTC,OAAO7B,SChCX,SAASqC,EAAW5E,GACjC,IAAMK,EAAWsD,qBAAWhE,GADqCkF,EAEhC7E,EAAMrB,OAA/BI,EAFyD8F,EAEzD9F,WAAYF,EAF6CgG,EAE7ChG,SAEpB,OACEyB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwD,SAAA,KACEzD,EAAAC,EAAAC,cAAA,OAAKU,UAAWmD,IAAG,QACjB/D,EAAAC,EAAAC,cAAA,OAAKU,UAAWmD,IAAG,QACjB/D,EAAAC,EAAAC,cAAA,SAAOwD,QAAQ,YAAf,YACA1D,EAAAC,EAAAC,cAAA,QAAMI,MAAO,CAAEC,SAAU,SACtB,QADH,kCAGAP,EAAAC,EAAAC,cAACoC,EAAD,CACEG,cAAe,SAAA3E,GACbiC,EAAS,CACPtD,KAAML,EAAckC,aACpBZ,QAAS,CAAEI,YAGfA,MAAOS,EACPiE,KAAK,WACLD,GAAG,eAITvC,EAAAC,EAAAC,cAAA,OAAKU,UAAWmD,IAAG,QACjB/D,EAAAC,EAAAC,cAAA,OAAKU,UAAWmD,IAAG,QACjB/D,EAAAC,EAAAC,cAAA,SAAOwD,QAAQ,cAAf,eACA1D,EAAAC,EAAAC,cAAA,QAAMI,MAAO,CAAEC,SAAU,SACtB,QADH,6CAGAP,EAAAC,EAAAC,cAACoC,EAAD,CACEG,cAAe,SAAA3E,GACbiC,EAAS,CACPtD,KAAML,EAAcoC,gBACpBd,QAAS,CAAEI,YAGfA,MAAOW,EACP+D,KAAK,aACLD,GAAG,sCCzCTiC,EAAaC,SAASC,eAAe,QAE3CC,IAASC,OAAO5E,EAAAC,EAAAC,cCED,WACb,OACEF,EAAAC,EAAAC,cAACT,EAAD,KACG,SAAClD,GAAD,OACCyD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACbZ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACkE,EAAD,CAAYzH,OAAQJ,EAAMI,SAC1BqD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoE,EAAD,CAAYjG,OAAQ9B,EAAM8B,SAC1B2B,EAAAC,EAAAC,cAACmE,EAAD,CAAY1F,OAAQpC,EAAMoC,SAC1BqB,EAAAC,EAAAC,cAACG,EAAD,UDZM,MAASmE","file":"static/js/main.d25eef46.chunk.js","sourcesContent":["export enum PersonActions {\n  INCREMENT_SHARES = \"share.inc\",\n  DECREMENT_SHARES = \"share.dec\",\n  CHANGE_SHARE_VALUE = \"share.change\"\n}\n\nexport enum PeopleActions {\n  ADD_PERSON = \"person.add\",\n  REMOVE_PERSON = \"person.remove\"\n}\n\nexport enum TotalsActions {\n  SET_SUBTOTAL = \"subtotal.set\",\n  SET_GRAND_TOTAL = \"grandtotal.set\"\n}\n\nexport enum ResultActions {\n  CALCULATE_RESULT = \"result.calc\"\n}\n\nexport type Action = {\n  type: PeopleActions | TotalsActions | PersonActions | ResultActions;\n  payload?: {\n    index?: number;\n    shareIndex?: number;\n    value?: number;\n  };\n};\n","import {\n  Action,\n  PeopleActions,\n  PersonActions,\n  ResultActions,\n  TotalsActions\n} from \"./Actions\";\nimport { AppState, PeopleState, ResultState, TotalsState } from \"./State\";\n\nimport Swal from \"sweetalert2\";\n\nfunction peopleReducer(state: AppState, action: Action): PeopleState {\n  switch (action.type) {\n    case PeopleActions.ADD_PERSON: {\n      if (state.people.length === 30) {\n        return state.people;\n      }\n      return [...state.people, { shares: [0], personTotal: 0 }];\n    }\n    case PeopleActions.REMOVE_PERSON: {\n      if (state.people.length === 2) {\n        return state.people;\n      }\n      return state.people.slice(0, -1);\n    }\n    case PersonActions.INCREMENT_SHARES:\n    case PersonActions.DECREMENT_SHARES:\n    case PersonActions.CHANGE_SHARE_VALUE:\n      return personReducer(state.people, action);\n    default:\n      return state.people;\n  }\n}\n\nfunction personReducer(state: PeopleState, action: Action): PeopleState {\n  switch (action.type) {\n    case PersonActions.INCREMENT_SHARES: {\n      return state.map((item, idx) => {\n        if (\n          action.payload != null &&\n          action.payload.index != null &&\n          idx === action.payload.index\n        ) {\n          return { ...item, shares: item.shares.concat([0]) };\n        }\n        return item;\n      });\n    }\n    case PersonActions.DECREMENT_SHARES: {\n      return state.map((item, idx) => {\n        if (\n          action.payload != null &&\n          action.payload.index != null &&\n          idx === action.payload.index\n        ) {\n          return { ...item, shares: item.shares.slice(0, -1) };\n        }\n        return item;\n      });\n    }\n    case PersonActions.CHANGE_SHARE_VALUE: {\n      return state.map((item, idx) => {\n        if (\n          action.payload != null &&\n          action.payload.shareIndex != null &&\n          action.payload.value != null &&\n          idx === action.payload.index\n        ) {\n          const newShares = item.shares;\n          newShares[action.payload.shareIndex] = action.payload.value;\n          return {\n            ...item,\n            shares: newShares,\n            personTotal: newShares.reduce((acc, val) => acc + val)\n          };\n        }\n        return item;\n      });\n    }\n    default:\n      return state;\n  }\n}\n\nfunction totalsReducer(state: AppState, action: Action): TotalsState {\n  if (action.payload == null) {\n    return state.totals;\n  }\n  switch (action.type) {\n    case TotalsActions.SET_SUBTOTAL: {\n      return { ...state.totals, subtotal: action.payload.value || 0 };\n    }\n    case TotalsActions.SET_GRAND_TOTAL: {\n      return { ...state.totals, grandtotal: action.payload.value || 0 };\n    }\n    default: {\n      return state.totals;\n    }\n  }\n}\n\nfunction resultReducer(state: AppState, action: Action): ResultState | null {\n  switch (action.type) {\n    case ResultActions.CALCULATE_RESULT: {\n      let personTotal = 0;\n      const splits = state.people.map((person, idx) => {\n        personTotal += person.personTotal;\n        return (\n          (person.personTotal / state.totals.subtotal) * state.totals.grandtotal\n        );\n      });\n\n      if (state.totals.subtotal === 0) {\n        Swal({\n          text: \"Enter a Subtotal!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      if (state.totals.grandtotal === 0) {\n        Swal({\n          text: \"Enter a Grand Total!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      if (personTotal.toFixed(2) != state.totals.subtotal.toFixed(2)) {\n        debugger;\n        Swal({\n          text: \"Items don't add up to subtotal!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      if (\n        splits.reduce((acc, val) => acc + val).toFixed(2) !=\n        state.totals.grandtotal.toFixed(2)\n      ) {\n        Swal({\n          text: \"Grand Total incorrect!\",\n          confirmButtonColor: \"#70d6ff\"\n        });\n        return state.result;\n      }\n      return {\n        splits,\n        tip: state.totals.grandtotal / state.totals.subtotal - 1\n      };\n    }\n    default: {\n      return state.result;\n    }\n  }\n}\n\nexport default function reducer(state: AppState, action: Action): AppState {\n  return {\n    people: peopleReducer(state, action),\n    totals: totalsReducer(state, action),\n    result: resultReducer(state, action)\n  };\n}\n","import React, { createContext, useReducer } from \"react\";\n\nimport { Action } from \"./Actions\";\nimport reducer from \"./Reducers\";\n\nexport type Person = {\n  shares: Array<number>;\n  personTotal: number;\n};\n\nexport type PeopleState = Array<Person>;\n\nexport type TotalsState = {\n  subtotal: number;\n  grandtotal: number;\n};\n\nexport type ResultState = {\n  splits: Array<number>;\n  tip: number;\n};\n\nexport type AppState = {\n  people: PeopleState;\n  totals: TotalsState;\n  result: null | ResultState;\n};\n\nexport const DispatchContext = React.createContext((action: Action) => {});\n\nexport const initialState: AppState = {\n  people: [\n    {\n      shares: [0],\n      personTotal: 0\n    },\n    {\n      shares: [0],\n      personTotal: 0\n    }\n  ],\n  totals: {\n    subtotal: 0,\n    grandtotal: 0\n  },\n  result: null\n};\n\nexport function DispatchContextProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      {props.children(state)}\n    </DispatchContext.Provider>\n  );\n}\n","import React from \"react\";\n\nexport default function FooterView() {\n  return (\n    <div style={{ fontSize: \"12px\", marginTop: \"48px\" }}>\n      <hr />\n      Made with &lt;3 by <a href=\"https://www.victorszeto.com\">Victor Szeto</a>\n    </div>\n  );\n}\n","import React, { ReactNode, ReactNodeArray } from \"react\";\n\nimport Ink from \"react-ink\";\n\ninterface IInkButtonProps {\n  children?: ReactNode | ReactNodeArray;\n  disabled?: boolean;\n  disableInk?: boolean;\n  onClick?: (any) => void;\n  className?: string;\n  type?: string;\n}\n\nexport default function InkButton({\n  children,\n  className,\n  onClick,\n  type,\n  disabled,\n  disableInk\n}: IInkButtonProps) {\n  return (\n    <button\n      onClick={onClick != null ? onClick : undefined}\n      className={className != null ? className : undefined}\n      disabled={disabled != null ? disabled : undefined}\n      type={type != null ? type : undefined}\n    >\n      {children}\n      {!disableInk && <Ink />}\n    </button>\n  );\n}\n","export default function mask(\n  value: number,\n  decimalSeparator: string = \".\",\n  thousandSeparator: string = \",\",\n  prefix: string = \"$\"\n): { value: number; maskedValue: string } {\n  const PRECISION = 2;\n  const MAX_DIGITS = 6 + 2;\n\n  if (value == null) {\n    return { value: 0, maskedValue: `${prefix}0.00` };\n  }\n\n  // if the given value is a Number, let's convert into String to manipulate that\n  const stringVal = String(value);\n\n  if (stringVal.length === 0) {\n    return { value: 0, maskedValue: `${prefix}0.00` };\n  }\n\n  // extract digits. if no digits, fill in a zero.\n  let digits = stringVal.match(/\\d/g) || [\"0\"];\n\n  if (stringVal.length > MAX_DIGITS) {\n    digits.pop();\n  }\n\n  // zero-pad a input\n  while (digits.length <= PRECISION) {\n    digits.unshift(\"0\");\n  }\n\n  // add the decimal separator\n  digits.splice(digits.length - PRECISION, 0, \".\");\n\n  // clean up extraneous digits like leading zeros.\n  digits = Number(digits.join(\"\"))\n    .toFixed(PRECISION)\n    .split(\"\");\n  let raw = Number(digits.join(\"\"));\n\n  // -1 needed to position the decimal separator before the digits.\n  let decimalpos = digits.length - PRECISION - 1;\n\n  // set the final decimal separator\n  digits[decimalpos] = decimalSeparator;\n\n  // add in any thousand separators\n  for (let x = decimalpos - 3; x > 0; x = x - 3) {\n    digits.splice(x, 0, thousandSeparator);\n  }\n\n  // if we have a prefix or suffix, add them in.\n  if (prefix.length > 0) {\n    digits.unshift(prefix);\n  }\n\n  return { value: raw, maskedValue: digits.join(\"\").trim() };\n}\n","import React, { useState } from \"react\";\n\nimport mask from \"../mask\";\n\ninterface ICurrencyInputProps {\n  onChangeEvent: (number) => void;\n  value: number;\n  name?: string;\n  id?: string;\n}\n\ntype CurrencyInputState = {\n  value: number;\n  maskedValue: string;\n};\n\nexport default function CurrencyInput(props: ICurrencyInputProps) {\n  const { id, name, onChangeEvent, value } = props;\n  const [state, setState] = useState<CurrencyInputState>(mask(value));\n\n  const handleChange = event => {\n    event.preventDefault();\n    let { maskedValue, value } = mask(event.currentTarget.value);\n    setState({ maskedValue, value });\n    onChangeEvent(value);\n  };\n\n  return (\n    <div className=\"col\">\n      <input\n        // selectAllOnFocus={true}\n        key={name}\n        className=\"col\"\n        // onChangeEvent={(_, __, floatVal) => floatVal}\n        // onChange={event => onChangeEvent(event.currentTarget.value)}\n        onChange={handleChange}\n        prefix={\"$\"}\n        value={state.maskedValue}\n        name={name ? name : undefined}\n        id={id ? id : undefined}\n      />\n    </div>\n  );\n}\n","import { DispatchContext, Person } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport CurrencyInput from \"../components/CurrencyInput\";\nimport InkButton from \"../components/InkButton\";\nimport { PersonActions } from \"../Actions\";\nimport { default as cx } from \"classnames\";\n\ninterface IPersonViewProps {\n  idx: number;\n  person: Person;\n}\n\nexport default function PersonView(props: IPersonViewProps) {\n  const { idx, person } = props;\n  const dispatch = useContext(DispatchContext);\n\n  const isMobile = navigator.userAgent.match(\"Mobi\");\n\n  const handleChangeEvent = (shareIndex, value) => {\n    dispatch({\n      type: PersonActions.CHANGE_SHARE_VALUE,\n      payload: { index: idx, shareIndex, value }\n    });\n  };\n\n  return (\n    <>\n      <label htmlFor={`person-${idx}`}>Person {idx + 1}</label>\n      {person.shares.length > 1 && (\n        <span style={{ fontSize: \"12px\" }}>\n          {`· Total: ${new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\"\n          }).format(person.personTotal)}`}\n        </span>\n      )}\n      <div className={cx(\"row\")}>\n        {person.shares.map((shareValue, shareIdx) => {\n          return (\n            <CurrencyInput\n              key={shareIdx}\n              onChangeEvent={value => handleChangeEvent(shareIdx, value)}\n              value={shareValue}\n              name={shareIdx === 0 ? `person-${idx}` : undefined}\n              id={shareIdx === 0 ? `person-${idx}` : undefined}\n            />\n          );\n        })}\n        {person.shares.length > 1 && (\n          <InkButton\n            className=\"col-1\"\n            onClick={e => {\n              e.preventDefault();\n              dispatch({\n                type: PersonActions.DECREMENT_SHARES,\n                payload: { index: props.idx }\n              });\n            }}\n          >\n            {isMobile ? \"Remove Item\" : \"-\"}\n          </InkButton>\n        )}\n        {person.shares.length <= 8 && (\n          <InkButton\n            className=\"col-1\"\n            onClick={e => {\n              e.preventDefault();\n              dispatch({\n                type: PersonActions.INCREMENT_SHARES,\n                payload: { index: props.idx }\n              });\n            }}\n          >\n            {isMobile ? \"Add Item\" : \"+\"}\n          </InkButton>\n        )}\n      </div>\n    </>\n  );\n}\n","import { DispatchContext, PeopleState } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport InkButton from \"../components/InkButton\";\nimport { PeopleActions } from \"../Actions\";\nimport PersonView from \"./PersonView\";\nimport { default as cx } from \"classnames\";\n\ninterface IPeopleViewProps {\n  people: PeopleState;\n}\n\nexport default function PeopleView(props: IPeopleViewProps) {\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <>\n      <div>\n        {props.people.map((person, idx) => (\n          <PersonView person={person} idx={idx} key={idx} />\n        ))}\n      </div>\n      <div className={cx(\"row\")} style={{ marginTop: \"32px\" }}>\n        {props.people.length < 30 && (\n          <InkButton\n            onClick={event => {\n              event.preventDefault();\n              dispatch({ type: PeopleActions.ADD_PERSON });\n            }}\n            className={cx(\"center\", \"col\", \"background-green\")}\n          >\n            Add Person\n          </InkButton>\n        )}\n        {props.people.length > 2 && (\n          <InkButton\n            onClick={event => {\n              event.preventDefault();\n              dispatch({ type: PeopleActions.REMOVE_PERSON });\n            }}\n            className={cx(\"center\", \"col\", \"background-red\")}\n            disabled={props.people.length === 2}\n          >\n            Remove Person\n          </InkButton>\n        )}\n      </div>\n    </>\n  );\n}\n","import { DispatchContext, ResultState } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport InkButton from \"../components/InkButton\";\nimport { ResultActions } from \"../Actions\";\nimport { default as cx } from \"classnames\";\n\ninterface IResultViewProps {\n  result: ResultState | null;\n}\n\nexport default function ResultView(props: IResultViewProps) {\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <>\n      <InkButton\n        className={cx(\"background-blue\")}\n        onClick={() =>\n          dispatch({\n            type: ResultActions.CALCULATE_RESULT\n          })\n        }\n        type=\"submit\"\n      >\n        Calculate\n      </InkButton>\n      {props.result && (\n        <>\n          <hr />\n          <h4>Results</h4>\n\n          {props.result.splits.map((split, idx) => (\n            <div className=\"row\" key={idx}>\n              <div className=\"col\">Person {idx + 1}</div>\n              <div className=\"col\">\n                {new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\"\n                }).format(split)}\n              </div>\n            </div>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n","import { DispatchContext, TotalsState } from \"../State\";\nimport React, { useContext } from \"react\";\n\nimport CurrencyInput from \"../components/CurrencyInput\";\nimport { TotalsActions } from \"../Actions\";\nimport { default as cx } from \"classnames\";\n\nexport default function TotalsView(props: { totals: TotalsState }) {\n  const dispatch = useContext(DispatchContext);\n  const { grandtotal, subtotal } = props.totals;\n\n  return (\n    <>\n      <div className={cx(\"row\")}>\n        <div className={cx(\"col\")}>\n          <label htmlFor=\"subtotal\">Subtotal</label>\n          <span style={{ fontSize: \"12px\" }}>\n            {\"· \"}Sum of the prices of all items\n          </span>\n          <CurrencyInput\n            onChangeEvent={value => {\n              dispatch({\n                type: TotalsActions.SET_SUBTOTAL,\n                payload: { value }\n              });\n            }}\n            value={subtotal}\n            name=\"subtotal\"\n            id=\"subtotal\"\n          />\n        </div>\n      </div>\n      <div className={cx(\"row\")}>\n        <div className={cx(\"col\")}>\n          <label htmlFor=\"grandTotal\">Grand Total</label>\n          <span style={{ fontSize: \"12px\" }}>\n            {\"· \"}Entire amount paid, including tax and tip\n          </span>\n          <CurrencyInput\n            onChangeEvent={value => {\n              dispatch({\n                type: TotalsActions.SET_GRAND_TOTAL,\n                payload: { value }\n              });\n            }}\n            value={grandtotal}\n            name=\"grandTotal\"\n            id=\"grandTotal\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst REACT_ROOT = document.getElementById(\"root\");\n\nReactDOM.render(<App />, REACT_ROOT);\n\nif (module[\"hot\"]) {\n  module[\"hot\"].accept(\"./App\", () => {\n    const NextApp: typeof App = require(\"./App\").default;\n    ReactDOM.render(<NextApp />, REACT_ROOT);\n  });\n}\n","import \"./App.css\";\n\nimport { AppState, DispatchContextProvider } from \"./State\";\n\nimport FooterView from \"./views/FooterView\";\nimport PeopleView from \"./views/PeopleView\";\nimport React from \"react\";\nimport ResultView from \"./views/ResultView\";\nimport TotalsView from \"./views/TotalsView\";\n\nexport default function App() {\n  return (\n    <DispatchContextProvider>\n      {(state: AppState) => (\n        <div className=\"container center\">\n          <h1>billsplit</h1>\n          <PeopleView people={state.people} />\n          <hr />\n          <TotalsView totals={state.totals} />\n          <ResultView result={state.result} />\n          <FooterView />\n        </div>\n      )}\n    </DispatchContextProvider>\n  );\n}\n"],"sourceRoot":""}